name: Publish

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag_on_main: ${{ steps.guard.outputs.ok }}
      is_final: ${{ steps.tagfilter.outputs.final }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0   # required for ancestry checks

      - name: Verify tag points to main
        id: guard
        run: |
          git fetch origin main
          if git merge-base --is-ancestor origin/main "$GITHUB_SHA"; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"
            echo "Tag is not on main; publish will be skipped."
          fi

      - name: Check tag type (final or pre-release)
        id: tagfilter
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if echo "$TAG" | grep -Eq '^v[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "final=true" >> "$GITHUB_OUTPUT"
          else
            echo "final=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Verify version matches tag
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          VTAG="${TAG#v}"
          PKGVER=$(python - <<'PY'
          import pathlib, re
          m = re.search(r'__version__\s*=\s*"([^"]+)"',
                        pathlib.Path("src/colocationpy/_version.py").read_text())
          print(m.group(1) if m else "MISSING")
          PY
          )
          echo "Tag: $VTAG  Package: $PKGVER"
          [ "$VTAG" = "$PKGVER" ] || { echo "Version mismatch"; exit 1; }

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - run: python -m pip install -U pip build twine
      - run: python -m build
      - run: python -m twine check dist/*

      - name: Upload dist artefacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist/*.whl
            dist/*.tar.gz
          if-no-files-found: error
          retention-days: 7

  publish-testpypi:
    if: needs.build.outputs.tag_on_main == 'true'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish (TestPyPI)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    if: needs.build.outputs.tag_on_main == 'true' && needs.build.outputs.is_final == 'true'
    needs: [build, publish-testpypi]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish (PyPI)
        uses: pypa/gh-action-pypi-publish@release/v1
